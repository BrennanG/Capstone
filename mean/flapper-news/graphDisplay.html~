<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN" "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd">
<html> 

  <head>
    <title>Cytoscape Web example</title>
    
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/1.12.0/jquery.min.js"></script>
    <script type="text/javascript" src="json2.min.js"></script>
    <script type="text/javascript" src="AC_OETags.min.js"></script>
    <script type="text/javascript" src="cytoscapeweb.min.js"></script>

    <script type="text/javascript">
      window.onload = function() {
        $("#content").html('<div class="tools"><small>You can use the right-click context menu to add and remove elements</small></div><div id="cytoscapeweb" width="*">Cytoscape Web will replace the contents of this div with your graph...</div>');

        var div_id = "cytoscapeweb";
        var vis;

        // options used for Cytoscape Web
        var options = {
            nodeTooltipsEnabled: true,
            edgeTooltipsEnabled: true,
            edgesMerged: false,
            edgeLabelsVisible: true,
            nodeLabelsVisible: true,
            visualStyle: {
                global: {
                    backgroundColor: "#fdfdfd",
                    tooltipDelay: 1000
                },
                nodes: {
                    shape: "RECTANGLE",
                    compoundShape: "RECTANGLE",
                    color: "#ffffb3",
                    opacity: 0.9,
                    height: 70,
                    borderWidth: 2,
                    borderColor: "#707070",
                    compoundBorderColor: "#abcfd6",
                    compoundBorderWidth: 2,
                    labelFontSize: 12,
                    labelFontWeight: "bold",
                    labelHorizontalAnchor: "center",
                    labelFontName: "Courier",
                    selectionGlowOpacity: 0,
                    selectionBorderColor: "ff0000",
                    hoverBorderWidth: 4
                },
                edges: {
                	  color: "#0b94b1",
                    width: 7,
                    opacity: 0.7,
                    labelFontSize: 12,
                    labelFontWeight: "bold",
                    selectionGlowOpacity: 0,
                    selectionColor: "ff0000"
                 }
            }   
        };
        
        function draw() {
        	$("input, select").attr("disabled", true);
                var networ_json = {
                  dataSchema: {
                    nodes: [ { name: "label", type: "string" } ],
                    edges: [ { name: "label", type: "string" } ]
                  },
                  data: {
                    nodes: [ { id: "1", label: "1234567890" },
                             { id: "2", label: "T" },
                             { id: "3", label: "Here's a test" },
                             { id: "4", label: "Other Biology Term" },
                             { id: "5", label: "AND ANOTHER TEST. HOW'S IT WORKING?" },
                             { id: "6", label: "WWWWWWWWWWWW" },
                             { id: "7", label: "Chromosome" },
                             { id: "8", label: "WWWWWWWWW" },
                             { id: "9", label: "Hey, what's up. How's it going? I'm great" },
                           ],
                    edges: [ 
                             { source: "5", target: "3", directed: true, label: "TESTING123 TESTINGTESTINGTESTING a b c" },
                             { source: "8", target: "3", directed: true },
                             { source: "7", target: "2", directed: true }
                           ]
                  }
                };

			          options.layout = { name: "CompoundSpringEmbedder" };
            	  options.network = networ_json;

                vis.draw(options);
        }

        var _srcId;
        function clickNodeToAddEdge(evt) {
            if (_srcId != null) {
            	vis.removeListener("click", "nodes", clickNodeToAddEdge);
            	var e = vis.addEdge({ source: _srcId, target: evt.target.data.id, directed: true}, true);
            	_srcId = null;
            }
        }
        
        $("input").attr("disabled", true);

        // init and draw
        vis = new org.cytoscapeweb.Visualization(div_id, { swfPath: "CytoscapeWeb", flashInstallerPath: "playerProductInstall" });
        
        var loadNode = function(json) {
            var node = JSON.parse(json);
            var newNode = vis.addNode(node.x, node.y, { id: node.data.id, label: node.data.label }, true);
            vis.updateData([newNode]);
        }
        
        vis.ready(function() {
            var layout = vis.layout();
            $("input, select").attr("disabled", false);
            
            // Right click on a node
            vis.addContextMenuItem("Add new edge", "nodes", function(evt) {
            	_srcId = evt.target.data.id;
                vis.removeListener("click", "nodes", clickNodeToAddEdge);
                vis.addListener("click", "nodes", clickNodeToAddEdge);
            });
            vis.addContextMenuItem("Edit Label", "nodes", function(evt) {
                vis.updateData([evt.target], { label: "1234567890"});
            });
            vis.addContextMenuItem("Delete node", "nodes", function(evt) {
                vis.removeNode(evt.target.data.id, true);
            });
            // Right click on an edge
            vis.addContextMenuItem("Edit Label", "edges", function(evt) {
                vis.updateData([evt.target], { label: "LABEL"});
            });
            vis.addContextMenuItem("Delete edge", "edges", function(evt) {
                vis.removeEdge(evt.target.data.id, true);
            });
            
            // Right click on open area
            vis.addContextMenuItem("Add new node", function(evt) {
                var x = evt.mouseX;
                var y = evt.mouseY;
                var parentId;
                if (evt.target != null && evt.target.group == "nodes") {
                    parentId = evt.target.data.id;
                    x = evt.target.x;
                    y = evt.target.y;
                    x += Math.random() * (evt.target.width/3) * (Math.round(Math.random()*100)%2==0 ? 1 : -1);
                    y += Math.random() * (evt.target.height/3) * (Math.round(Math.random()*100)%2==0 ? 1 : -1);
                }
                var n = vis.addNode(x, y, { parent: parentId }, true);
                n.data.label = n.data.id;
                vis.updateData([n]);
            });
            vis.addContextMenuItem("Delete selected", function(evt) {
                var items = vis.selected();
                if (items.length > 0) { vis.removeElements(items, true); }
            });
        });
        
        vis.addListener("error", function(err) {
		      alert(err.value.msg);
        });

        // Register control liteners:
        $("#reapplyLayout").click(function(evt) {
          var layout = vis.layout();
          vis.layout(layout);
        });

        draw();
      };

            
    </script>

    <style>
            * { margin: 0; padding: 0; font-family: Helvetica, Arial, Verdana, sans-serif; }
            html, body { height: 100%; width: 100%; padding: 0; margin: 0; background-color: #f0f0f0; }
            body { line-height: 1.5; color: #000000; font-size: 14px; }
            /* The Cytoscape Web container must have its dimensions set. */
            #cytoscapeweb { width: 100%; height: 100%; }
            #content { width: 100%; height: 90%; }
    </style>
  </head>
    
  <body>
    <div id="content" class="half_and_half">
      Cytoscape Web will replace the contents of this div with your graph.
    </div>
  </body>

</html>
